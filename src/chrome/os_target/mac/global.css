/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

/* autorepeatbuttons in menus */

.popup-internal-box > autorepeatbutton {
  height: 15px;
  position: relative;
  list-style-image: none;
  /* Here we're using a little magic.
   * The arrow button is supposed to overlay the scrollbox, blocking
   * everything under it from reaching the screen. However, the menu background
   * is slightly transparent, so how can we block something completely without
   * messing up the transparency? It's easy: The native theming of the
   * "menuitem" appearance uses CGContextClearRect before drawing, which
   * clears everything under it.
   * Without help from native theming this effect wouldn't be achievable.
   */
  -moz-appearance: menuitem;
}

.popup-internal-box > .autorepeatbutton-up {
  padding-top: 1px; /* 4px padding-top from the .popup-internal-box. */
  margin-bottom: -15px;
}

.popup-internal-box > .autorepeatbutton-up > .autorepeatbutton-icon {
  -moz-appearance: button-arrow-up;
}

.popup-internal-box > .autorepeatbutton-down {
  padding-top: 5px;
  margin-top: -15px;
}

.popup-internal-box > .autorepeatbutton-down > .autorepeatbutton-icon {
  -moz-appearance: button-arrow-down;
}

.popup-internal-box > autorepeatbutton[disabled="true"] {
  visibility: collapse;
}

/* :::::: Close button icons ::::: */

@media (min-resolution: 2dppx) {
  .close-icon > .button-icon,
  .close-icon > .button-box > .button-icon,
  .close-icon > .toolbarbutton-icon {
    width: 16px;
  }
}
